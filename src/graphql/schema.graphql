# import * from './prisma.graphql'

type SuccessMessage {
  message: String
}

type Mutation {
  createLabel(
    name: String
    description: String
    slug: String
    extends: ExtendsUpdateManyInput
  ): Label!
   updateLabel(
    id: ID!
    name: String
    slug: String
    description: String
    extends: ExtendsUpdateManyInput
  ): Category
  createArticle(
    title: String
    description: String
    keywords: String
    content: String
    thumbnail: String
    state: String
    public: String
    category: String
    meta: MetaUpdateManyInput
    label: LabelUpdateManyInput
  ): Article!
  createCategory(
    name: String
    slug: String
    description: String
    article: CategoryUpdateManyInput
    extends: ExtendsUpdateManyInput
  ): Category!
  updateCategory(
    id: ID!
    name: String
    slug: String
    description: String
    article: CategoryUpdateManyInput
    extends: ExtendsUpdateManyInput
  ): Category
  deleteCategory(id: ID!): Category
  deleteArticle(id: ID!): Article
  login(email: String!, password: String!): User!
  logout: SuccessMessage
}

type Query {
  label(where: LabelWhereUniqueInput): Label
  labels: [Label]!
  article(where: ArticleWhereUniqueInput!): Article
  articles: [Article]!
  categories: [Category]!
  category(where: CategoryWhereUniqueInput!): Category
  user: User
}

type User {
  id: ID!
  name: String!
  email: String!
  token: String
}
